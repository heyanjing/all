<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		 http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">

    <!--// MEINFO:2017/12/16 16:53 log4j-web-->
    <context-param>
        <param-name>log4jConfiguration</param-name>
        <param-value>classpath:config/log4j2.xml</param-value>
    </context-param>
    <!--// MEINFO:2017/12/16 16:53 spring容器初始化-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:spring/spring-base*.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--// MEINFO:2017/12/16 16:53 乱码拦截-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <async-supported>true</async-supported><!--// MEINFO:2017/11/29 9:50 使用 Servlet 3 的异步请求处理 DispatcherServlet 和任意 Filter 的配置都需要有 <async-supported>true</async-supported> 子元件 -->
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>ERROR</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>ASYNC</dispatcher><!--// MEINFO:2017/11/29 9:50 使用 Servlet 3 的异步请求处理 DispatcherServlet 和任意 Filter 的配置都需要有 <async-supported>true</async-supported> 子元件 -->
    </filter-mapping>
    <!--// MEINFO:2017/12/16 16:53 sitemesh-->
    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>org.sitemesh.config.ConfigurableSiteMeshFilter</filter-class>
        <async-supported>true</async-supported><!--// MEINFO:2017/11/29 9:50 使用 Servlet 3 的异步请求处理 DispatcherServlet 和任意 Filter 的配置都需要有 <async-supported>true</async-supported> 子元件 -->
    </filter>
    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>ERROR</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>ASYNC</dispatcher><!--// MEINFO:2017/11/29 9:50 使用 Servlet 3 的异步请求处理 DispatcherServlet 和任意 Filter 的配置都需要有 <async-supported>true</async-supported> 子元件 -->
    </filter-mapping>
    <!--// MEINFO:2017/12/16 16:53 SpringMVC-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath*:spring/spring-web*.xml</param-value>
        </init-param>
        <init-param>
            <param-name>throwExceptionIfNoHandlerFound</param-name>
            <param-value>true</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        <async-supported>true</async-supported><!--// MEINFO:2017/11/29 9:50 使用 Servlet 3 的异步请求处理 DispatcherServlet 和任意 Filter 的配置都需要有 <async-supported>true</async-supported> 子元件 -->
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    <!--// MEINFO:2017/12/16 16:53 首页
    <welcome-file-list>
        <welcome-file>/</welcome-file>
    </welcome-file-list>
    -->
</web-app>