<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:component-scan base-package="com.he.maven.all.ssh" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <mvc:resources mapping="/static/**" location="/static/"/>

    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="contentType" value="text/html; charset=UTF-8"/>
        <property name="prefix" value="/WEB-INF/view"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--
        格式转换服务功能相当于实体类上加@DateTimeFormat注解,
        这样做的好处在于不用每个类的字段上面都加注解
    -->
    <bean id="formatService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="formatters">
            <set>
                <bean class="com.he.maven.all.ssh.base.core.formatter.DateFormatter"/>
                <bean class="com.he.maven.all.ssh.base.core.formatter.LocalDateFormatter"/>
                <bean class="com.he.maven.all.ssh.base.core.formatter.LocalDateTimeFormatter"/>
            </set>
        </property>
    </bean>

    <mvc:annotation-driven conversion-service="formatService">
        <mvc:message-converters>
            <!--java8 日期序列化-->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper" value="#{jsonConverter.mapper}"/>
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
        <mvc:async-support task-executor="myThreadPool" default-timeout="6000"  ><!--定义6秒为默认值  DeferredResult 可以通过setXX方法更改默认值,Callable  也可以封装成WebAsyncTask 并通过setXX方法更改-->
            <mvc:callable-interceptors>
                <bean class="com.he.maven.all.ssh.base.core.async.MyCallableInterceptor"/>
            </mvc:callable-interceptors>
            <mvc:deferred-result-interceptors>
                <bean class="com.he.maven.all.ssh.base.core.async.MyDeferredResultInterceptor"/>
            </mvc:deferred-result-interceptors>
        </mvc:async-support>
    </mvc:annotation-driven>

    <!--异步任务的线程池-->
    <bean id="myThreadPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5"/><!--最小线程数 -->
        <property name="maxPoolSize" value="10"/><!--最大线程数 -->
        <property name="queueCapacity" value="50"/><!--缓冲队列大小 -->
        <property name="threadNamePrefix" value="abc-"/><!--线程池中产生的线程名字前缀 -->
        <property name="keepAliveSeconds" value="30"/><!--线程池中空闲线程的存活时间单位秒 -->
    </bean>
</beans>
